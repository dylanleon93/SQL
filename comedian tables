Create Table Comedians (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, dob TEXT, loc_born TEXT);

Insert Into Comedians (name, dob, loc_born) Values 
("Bert Kreischer", "1972-11-03", "Florida"),
("Bobby Lee", "1971-01-17", "California"),
("Tom Segura", "1979-04-16", "Ohio"),
("Christina Pazsitzky", "1976-06-18", "Canada"),
("Andrew Schulz", "1983-10-30", "New York"),
("Akash Singh", "1984-05-04", "New York"),
("Whitney Cummings", "1982-09-04", "Washington D.C."),
("Joe Rogan", "1967-08-11", "New Jersey"),
("Bill Burr", "1968-06-10", "Massachusetts"),
("Tim Dillon", "1985-01-22", "New York"),
("Andrew Santino", "1983-10-16", "Illinois"),
("Chris DiStefano", "1984-08-26", "New York"),
("Theo Von", "1980-03-19", "Louisiana");
 
Create Table Comedy_Specials (id Integer Primary Key AUTOINCREMENT, title TEXT, platform TEXT);

Insert Into Comedy_Specials (title, platform) VALUES
("Ball Hog", "Netflix"),
("Disgraceful", "Netflix"),
("Completely Normal", "Netflix"),
("Mother Inferior", "Netflix"),
("Bring Back Apu", "Youtube"),
("Regular People", "Netflix"),
("No Offense", "Netflix"),
("Speshy Weshy", "Netflix"),
("The Crowd Work Special", "Youtube"),
("Schulz Saves America", "Netflix"),
("Home Field Advantage", "Amazon"),
("You People Are All The Same", "Youtube"),
("Paper Tiger", "Netflix"),
("I'm Sorry You Feel That Way", "Netflix"),
("Can I Touch It", "Netflix"),
("Secret Time", "Netflix"),
("The Machine", "Netflix"),
("Strange Times", "Netflix"),
("Triggered", "Netflix");

Create Table Comedian_Specials (id Integer Primary Key AUTOINCREMENT, comedian_id INTEGER, comedy_special_id INTEGER);

Insert Into Comedian_Specials (comedian_id, comedy_special_id) VALUES
(3, 1),
(3, 2),
(3, 3),
(4, 4),
(6, 5),
(13, 6),
(13, 7),
(12, 8),
(5, 9),
(5, 10),
(11, 11),
(9, 12),
(9, 13),
(9, 14),
(7, 15),
(1, 16),
(1, 17),
(8, 18),
(8, 19)
;

CREATE TABLE Comedy_Podcasts(id INTEGER PRIMARY KEY AUTOINCREMENT, podcast TEXT, platform TEXT);

Insert INTO Comedy_Podcasts (podcast, platform) VALUES
("Tiger Belly", "Youtube"),
("The Flagrant 2", "Youtube"),
("The Joe Rogan Experience", "Spotify"),
("Bad Friends", "Youtube"),
("Your Mom's House", "Youtube"),
("2 Bears 1 Cave", "Youtube"),
("This Past Weekend", "Youtube"),
("Monday Morning Podcast", "Youtube"),
("Whiskey Ginger", "Youtube");

CREATE TABLE Comedian_Podcasts (id INTEGER PRIMARY KEY AUTOINCREMENT, comedian_id INTEGER, podcast_id INTEGER);

INSERT INTO Comedian_Podcasts (comedian_id, podcast_id) VALUES 
(2, 1),
(5, 2),
(6, 2),
(8, 3),
(2, 4),
(11, 4),
(3, 5),
(4, 5),
(1, 6),
(3, 6),
(13, 7),
(9, 8),
(11, 9);

-- What Specials does each Comedian have?

SELECT comedians.name, comedy_specials.title FROM comedian_specials
JOIN
comedians ON comedians.id = comedian_id
JOIN comedy_specials ON comedy_specials.id = comedy_special_id
ORDER BY comedians.name;

--Which comedians are on more than 1 podcast. 

Select comedians.name, COUNT(comedy_podcasts.podcast) as "number of podcasts" FROM comedian_podcasts
JOIN comedians ON comedians.id = comedian_id
JOIN comedy_podcasts ON comedy_podcasts.id = podcast_id
GROUP BY comedians.name
HAVING COUNT(comedians.name) >1
;
